{"version":3,"file":"static/js/256.d1593327.chunk.js","mappings":"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,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI2wB,EAAqC5wB,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFxI,EAAAA,iBAA2B,SACzB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","sources":["../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  5133: require('./5133.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['grayGlacier', require('./grayGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,null,null,null,null,null,null,null,null,null,"import type { AccessListEIP2930TxData, FeeMarketEIP1559TxData, TxData } from \"@ethereumjs/tx\";\nimport { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nexport interface ExtendedAccessListEIP2930TxData extends AccessListEIP2930TxData {\n  from: string;\n}\n\nexport interface ExtendedFeeMarketEIP1559Transaction extends FeeMarketEIP1559TxData {\n  from: string;\n}\n\nexport interface ExtendedTxData extends TxData {\n  from: string;\n}\n\nexport type TransactionParams = ExtendedFeeMarketEIP1559Transaction & ExtendedAccessListEIP2930TxData & ExtendedTxData;\n\nexport interface MessageParams<T> {\n  from: string;\n  data: T;\n}\n\nexport interface TypedMessageParams<T> {\n  from: string;\n  version: string;\n  data: T;\n}\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport interface WalletMiddlewareOptions {\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  processDecryptMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => string;\n  processEncryptionPublicKey?: (address: string, req: JRPCRequest<unknown>) => Promise<string>;\n  processEthSignMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processPersonalMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processSignTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processTypedMessage?: (msgParams: MessageParams<TypedDataV1>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV3?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV4?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createWalletMiddleware, WalletMiddlewareOptions } from \"./walletMidddleware\";\n\nexport type IProviderHandlers = WalletMiddlewareOptions;\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport interface AddEthereumChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addChain: (params: AddEthereumChainParameter) => Promise<void>;\n  switchChain: (params: { chainId: string }) => Promise<void>;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport interface IAccountHandlers {\n  updatePrivatekey: (params: { privateKey: string }) => Promise<void>;\n}\n\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/walletMidddleware\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BigNumber) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BigNumber {\n  if (BigNumber.isBigNumber(inputHex)) return inputHex;\n  return new BigNumber(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BigNumber, numerator: number | BigNumber, denominator: number | BigNumber): BigNumber {\n  const numberBN = new BigNumber(numerator);\n  const denomBN = new BigNumber(denominator);\n  return targetBN.multipliedBy(numberBN).dividedBy(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/walletMidddleware\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.multipliedBy(0.9).dp(0, 1);\n    const bufferedGasLimitBn = initialGasLimitBn.multipliedBy(multiplier).dp(0, 1);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport {\n  AddEthereumChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createEthMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1_1","chain","name_1","name","chainId","toString","exports","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_b","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","_c","Istanbul","hardforks","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","_a","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","Array","isArray","map","e","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","concat","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","HARDFORK_CHANGES_4_1","HARDFORK_CHANGES_5_1","HARDFORK_CHANGES_6_1","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","nonce","gasLimit","to","r","s","type","_type","toBuffer","toNumber","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","unpadBuffer","publicToAddress","privateKey","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","isSupportedChainId","forCustomChain","values","bits","cannotEqual","entries","key","bufferToHex","postfix","TRANSACTION_TYPE_BUFFER","accessList","maxFeePerGas","maxPriorityFeePerGas","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","checkMaxInitCodeSize","freeze","FeeMarketEIP1559Transaction","serialized","slice","equals","decode","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","call","getDataFeeEIP2930","isFrozen","baseFee","gasPrice","min","sub","add","bnToUnpaddedBuffer","base","raw","encode","hashMessage","message","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","enumerable","get","default","__exportStar","_validateTxV","chainIdDoubled","muln","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","isBuffer","fromSerializedData","transactionID","_common","isAccessListBuffer","input","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","utils_1","ephemeralKeyPair","nacl","box","keyPair","pubKeyUInt8Array","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","output","encodeUTF8","msgHex","msgBase64","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","signature","messageHash","sig","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","ethereumjs_abi_1","t","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","toLowerCase","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","constructor","number","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","c","charCodeAt","parseHexByte","lowerBound","parseBase","str","start","end","len","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","j","w","off","strip","limbLen","limbPow","total","mod","word","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toJSON","toArrayLike","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","umod","divRound","dm","half","r2","egcd","A","B","C","D","g","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","lten","lte","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","ethjsUtil","secp256k1","addr","bytes_1","eip1191ChainId","stripHexPrefix","prefix","hash_1","parseInt","toUpperCase","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","first","isHexString","padToEven","isHexPrefixed","ba","array","keccak224","keccak384","keccak512","createHash","update","digest","padded","rlp","fields","_fields","label","obj_1","getter","setter","allowZero","allowLess","defineProperty","configurable","set","alias","d","keys_1","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","lenbyte","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","point","toPublicKey","getX","getY","bn","keyFromPublic","scalar","shared","pub","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","async","validateAndNormalizeKeyholder","req","normalizedAccounts","_address","normalizedAddress","ethErrors","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","accounts","eth_sendTransaction","txParams","params","eth_signTransaction","eth_sign","msgParams","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","extraParams","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","WalletConnectProvider","BaseProvider","config","state","connector","super","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_ref2","addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","sendTransaction","signTransaction","signMessage","signPersonalMessage","signTypedData","getProviderHandlers","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","toNumericBase","fromDenomination","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","validateTypedMessageParams","parameters","activeChainId","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","_data$domain","isNaN","signTx","privKey","txFormatter","finalTxParams","formatTransaction","getCommonConfiguration","inputBn","addHexPrefix","hexToBn","inputHex","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","getProviderEngineProxy","providerProxy","isEIP1559Compatible","getEIP1559Compatibility","clonedTxParams","gas","defaultGasLimit","getDefaultGasLimit","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","getDefaultGasFees","latestBlock","baseFeePerGas","isLegacyGasAPICompatible","gasData","gasFeeEstimates","url","estimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchEip1159GasEstimates","gasEstimateType","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchLegacyGasPriceEstimates","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","estimatedGasHex","targetBN","numerator","denominator","numberBN","denomBN","multipliedBy","dividedBy","BnMultiplyByFraction","estimateTxGas","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","TWENTY_ONE_THOUSAND","analyzeGasUsage","EthereumPrivateKeyProvider","bind","privateToAddress","providerEngineProxy","signedTx","privKeyBuffer","personalSign","finalChainId","getEncryptionPublicKey","stripped","buff","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","network","switchChain","wallet_addEthereumChain","chainParams","nativeCurrency","wallet_switchEthereumChain","createChainSwitchMiddleware","blockExplorerUrls","ticker","symbol","tickerName","blockExplorer","updatePrivatekey","wallet_updateAccount","accountParams","createAccountMiddleware","updateAccount","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","L","DO_NOT_EXPORT_CRC","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","hasOwnProperty","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","some","testType","list","id","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","minProperties","maxProperties","every","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","decodeURIComponent","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","substring","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","integer","boolean","date","Date","any"],"sourceRoot":""}