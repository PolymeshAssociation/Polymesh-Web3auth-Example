{"version":3,"file":"static/js/823.8418362b.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@solana/web3.js/src/util/to-buffer.ts","../node_modules/@solana/web3.js/node_modules/minimalistic-assert/index.js","../node_modules/@solana/web3.js/node_modules/inherits/inherits_browser.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/utils.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/common.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/common.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/1.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/256.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/224.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/512.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/384.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/ripemd.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/hmac.js","../node_modules/@solana/web3.js/node_modules/hash.js/lib/hash.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/sha2.js","../node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/_version.js","../node_modules/@solana/web3.js/src/util/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/util/bigint.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/transaction-constants.ts","../node_modules/@solana/web3.js/src/util/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/message.ts","../node_modules/@solana/web3.js/src/util/assert.ts","../node_modules/@solana/web3.js/src/transaction.ts","../node_modules/@solana/web3.js/src/system-program.ts","../node_modules/@solana/web3.js/src/address-lookup-table-program.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/util/sleep.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/src/compute-budget.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/util/url-impl.ts","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/util/tx-expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/util/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/ed25519-program.ts","../node_modules/@solana/web3.js/src/stake-program.ts","../node_modules/@solana/web3.js/src/secp256k1-program.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/src/vote-program.ts","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport * as bigintLayout from './util/bigint';\nimport {SystemProgram} from './system-program';\nimport {TransactionInstruction} from './transaction';\nimport {decodeData, encodeData, IInstructionInputData} from './instruction';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","export const URL = globalThis.URL;\nexport const URLSearchParams = globalThis.URLSearchParams;\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {URL} from './util/url-impl';\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: new Message(result.transaction.message),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {URL} from './url-impl';\n\nexport function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import type Solflare from \"@solflare-wallet/sdk\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<Solflare> {\n  protected getProviderHandlers(injectedProvider: Solflare): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport type Solflare from \"@solflare-wallet/sdk\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: Solflare, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_accounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","ExternalLayout","isCount","Error","GreedyCount","elementSpan","decode","rem","Math","floor","encode","src","OffsetLayout","layout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","StructError","failure","failures","cached","message","rest","path","super","join","this","isObject","x","print","JSON","stringify","shiftIterator","input","done","next","toFailure","result","context","struct","branch","type","refinement","key","toFailures","Symbol","iterator","r","run","options","coerce","mask","ctx","coercer","schema","valid","validator","k","s","entries","ts","t","Map","set","Set","add","refiner","Struct","props","assert","validate","is","tuples","tuple","define","array","Element","boolean","instance","Class","literal","constant","description","never","nullable","number","isNaN","optional","record","Key","Value","string","Elements","Never","max","keys","Structs","map","S","first","unknown","condition","toBuffer","arr","Buffer","byteLength","minimalisticAssert","val","msg","equal","l","inherits_browserModule","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","zero8","utils","enc","res","replace","parseInt","p","c","endian","end","len","m","a","d","buf","pos","ah","al","bh","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","rotr32","ch32","y","z","maj32","p32","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","_1","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","f","g","T1","T2","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","sha","require$$4","sum32_3","RIPEMD160","j","K","Kh","ripemd","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","hex","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","arguments","arrayify","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","data","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","toArrayLike","zeroPad","fromPublicKey","seed","programId","seeds","publicKeyBytes","is_on_curve","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","naclLowLevel","nacl","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","M","Z","pow2523","neq25519","I","pack25519","crypto_verify_32","BufferLayout","rustString","rsl","_decode","_encode","rslShim","str","chars","alloc","u64","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","encodeData","allocLength","getItemAlloc","item","field","layoutFields","instruction","index","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","PACKET_DATA_SIZE","decodeLength","size","elem","encodeLength","rem_len","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","nonProgramIds","filter","_","numKeys","keyCount","shortvec","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","pubkey","isSigner","isWritable","Transaction","signature","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","accountMetas","accountMeta","includes","uniqueMetas","pubkeyString","uniqueIndex","findIndex","sort","localeCompare","feePayerIndex","payerMeta","splice","signedKeys","unsignedKeys","compiledInstructions","indexOf","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","sign","uniqueSigners","signer","_partialSign","partialSign","secretKey","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","BigInt","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","lookupTableAddress","bumpSeed","authority","recentSlot","payer","lookupTable","addresses","addr","recipient","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","Loader","ceil","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","URL","globalThis","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","fetch","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","process","Connection","endpoint","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","protocol","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","confirmTransactionInitialTimeout","useHttps","host","port","makeWebsocketUrl","customFetch","fetchImpl","fetchWithMiddleware","init","modifiedFetchArgs","reject","modifiedInfo","modifiedInit","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","statusText","text","ok","createRpcClient","response","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","timeoutId","subscriptionId","confirmationPromise","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","TIMED_OUT","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","race","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","rawConfig","_buildArgsAtLeastConfirmed","extra","unsafeRes","block","endSlot","transactionDetails","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","getNonceAndContext","to","disableCache","expired","Date","now","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","includeAccounts","originalTx","_blockhashWithExpiryBlockHeight","encodedTransaction","sigVerify","traceIndent","logTrace","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","delete","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","TextEncoder","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","PRIVATE_KEY_BYTES","fromSecretKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","lockup","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","publicKeyCreate","ecdsaSign","secp256k1","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","ETHEREUM_ADDRESS_BYTES","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","base64","require","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","allocUnsafe","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","get","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","sym","getMessage","Base","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","abs","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","createRequestAccountsMiddleware","_ref2","requestAccounts","createGenericJRPCMiddleware","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","BaseProvider","chainConfig","chainNamespace","CHAIN_NAMESPACES","injectedProvider","engine","JRPCEngine","solanaMiddleware","getProviderHandlers","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","getBaseProviderHandlers","ethErrors","_req$params","_req$params2","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","txMessage","conn","rpcTarget","allTxns","unsignedTx","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_req$params3","_req$params4","_req$params5","getTorusHandlers","configure","_objectSpread","setupProvider","SolanaPrivateKeyProvider","_providerEngineProxy","privKey","keyPair","txns","_req$params6","tx","networkMiddleware","createFetchMiddleware","createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","_ref3","addNewChainConfig","switchSolanaChain","createChainSwitchMiddleware","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchChain","_ref4","updatePrivatekey","createAccountMiddleware","updateAccount","providerFactory","SolanaWallet","_defineProperty","_Buffer","module","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","reverse","width","padStart","__createBinding","o","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","serializeStruct","borshSerialize","structSchema","deserializeField","reader","deserializeStruct","classType","borshDeserialize","Writer","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","self","isBatch","hasCallback","_parseResponse","responseText","parse","isError","isNotError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_super","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_this","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","_this2","send","promise","_login","mark","_callee","resp","wrap","_context","prev","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","event","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","addEventListener","listeners","EventEmitter","WebSocketBrowserImpl","protocols","window","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","getRandomValues","rnds8","rng","crypto","msCrypto","REGEX","byteToHex","rnds","random","ReferenceError","asyncGeneratorStep","gen","_throw","Constructor","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","iter","object","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","runtime","regeneratorRuntime","accidentalStrictMode","Function","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","finished","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","u","stringToCodePoints"],"sourceRoot":""}